{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"User": {
				"properties": {
					"id": {
						"type": "string"
					},
					"user_name": {
						"type": "string"
					},
					"first_name": {
						"type": "string"
					},
					"last_name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"is_verified": {
						"type": "string"
					},
					"is_active": {
						"type": "string"
					},
					"is_staff": {
						"type": "string"
					},
					"date_joined": {
						"type": "string"
					},
					"lastLogin": {
						"type": "string",
						"format": "date-time"
					},
					"tasks": {
						"$ref": "#/components/schemas/Relation_Task-Array_"
					},
					"teamMemberships": {
						"$ref": "#/components/schemas/Relation_TeamMemberShip-Array_"
					}
				},
				"required": [
					"id",
					"user_name",
					"first_name",
					"last_name",
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Task": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"user_id": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Relation_Task-Array_": {
				"items": {
					"$ref": "#/components/schemas/Task"
				},
				"type": "array",
				"description": "Wrapper type for relation type definitions in entities.\nUsed to circumvent ESM modules circular dependency issue caused by reflection metadata saving the type of the property.\n\nUsage example:"
			},
			"Relation_TeamMemberShip-Array_": {
				"items": {
					"$ref": "#/components/schemas/TeamMemberShip"
				},
				"type": "array",
				"description": "Wrapper type for relation type definitions in entities.\nUsed to circumvent ESM modules circular dependency issue caused by reflection metadata saving the type of the property.\n\nUsage example:"
			},
			"Role": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"teamMemberships": {
						"$ref": "#/components/schemas/Relation_TeamMemberShip-Array_"
					}
				},
				"required": [
					"id",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Team": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"updated_at": {
						"type": "string",
						"format": "date-time"
					},
					"teamMemberships": {
						"$ref": "#/components/schemas/Relation_TeamMemberShip-Array_"
					}
				},
				"required": [
					"id",
					"name",
					"created_at"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TeamMemberShip": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"role": {
						"$ref": "#/components/schemas/Role"
					},
					"team": {
						"$ref": "#/components/schemas/Team"
					}
				},
				"required": [
					"id",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"updateProfileDto": {
				"properties": {
					"first_name": {
						"type": "string"
					},
					"last_name": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"GetUserError": {
				"properties": {
					"message": {
						"type": "string",
						"enum": [
							"user not found"
						],
						"nullable": false
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetTaskError": {
				"properties": {
					"message": {
						"type": "string",
						"enum": [
							"Task not found"
						],
						"nullable": false
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "df.2.0-task-mgt-user-profile",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/user/{userId}": {
			"patch": {
				"operationId": "UpdateProfile",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/updateProfileDto"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "fetch user succesful",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"default": {
						"description": "user not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetUserError"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/task/{taskId}": {
			"get": {
				"operationId": "GetTask",
				"responses": {
					"200": {
						"description": "fetch task successful",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Task"
								}
							}
						}
					},
					"default": {
						"description": "task not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetTaskError"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "taskId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/task/{userId}/user": {
			"get": {
				"operationId": "GetUserTask",
				"responses": {
					"200": {
						"description": "fetch task successful",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Task"
									},
									"type": "array"
								}
							}
						}
					},
					"default": {
						"description": "task not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetTaskError"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}